{"ast":null,"code":"var _jsxFileName = \"D:\\\\Skripsi\\\\Sistem\\\\Dokumentasi API\\\\code\\\\dokumentasi-ecg-api\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Tab, Nav, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dokumentasi API Electrocardiogram (ECG)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Dokumentasi ini menjelaskan cara mengakses layanan API untuk data Electrocardiogram atau ECG. Saat ini terdapat dua fitur utama yaitu untuk mengunggah dan mengambil data ECG dari database.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"POST /upload-batch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Method \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"upload-batch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }, this), \" digunakan untuk mengunggah file ECG berjenis CSV beserta nama pasien secara batch atau keseluruhan.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tab.Container, {\n      defaultActiveKey: \"javascript-batch\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Contoh Penggunaan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {\n        variant: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"javascript-batch\",\n            children: \"Javascript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"python-batch\",\n            children: \"Python\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"java-batch\",\n            children: \"Java\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"javascript-batch\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: `fetch('http://<IP-Address>/api/rest/upload-batch', {\n  method: 'POST',\n  body: formData\n}).then(response => response.json())`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"python-batch\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: `import requests\nurl = 'http://<IP-Address>/api/rest/upload-batch'\nfiles = {'file': open('ecg.csv', 'rb')}\nresponse = requests.post(url, files=files)`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"java-batch\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: `HttpResponse<String> response = Unirest.post(\"http://<IP-Address>/api/rest/upload-batch\")\n  .field(\"patientName\", \"John Doe\")\n  .field(\"file\", new File(\"path/to/ecg.csv\"))\n  .asString();`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tab.Container, {\n      defaultActiveKey: \"sukses-batch\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {\n        variant: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"sukses-batch\",\n            children: \"Sukses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"gagal-batch\",\n            children: \"Gagal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"sukses-batch\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: `{ \"message\": \"File uploaded and data saved\" }`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"gagal-batch\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: `{ \"message\": \"File upload failed\" }`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"POST /upload-stream\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Method \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"upload-stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 16\n      }, this), \" digunakan untuk mengunggah file ECG berjenis CSV beserta nama pasien secara stream atau bertahap.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tab.Container, {\n      defaultActiveKey: \"javascript-stream\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Contoh Penggunaan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {\n        variant: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"javascript-stream\",\n            children: \"Javascript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"python-stream\",\n            children: \"Python\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"java-stream\",\n            children: \"Java\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"javascript-stream\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: `fetch('http://<IP-Address>/api/rest/upload-stream', {\n  method: 'POST',\n  body: formData\n}).then(response => response.json())`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"python-stream\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: `import requests\nurl = 'http://<IP-Address>/api/rest/upload-stream'\nfiles = {'file': open('ecg.csv', 'rb')}\nresponse = requests.post(url, files=files)`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"java-stream\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: `HttpResponse<String> response = Unirest.post(\"http://<IP-Address>/api/rest/upload-stream\")\n  .field(\"patientName\", \"John Doe\")\n  .field(\"file\", new File(\"path/to/ecg.csv\"))\n  .asString();`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tab.Container, {\n      defaultActiveKey: \"sukses-stream\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {\n        variant: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"sukses-stream\",\n            children: \"Sukses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"gagal-stream\",\n            children: \"Gagal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"sukses-stream\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: `{ \"message\": \"File uploaded and data saved\" }`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"gagal-stream\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: `{ \"message\": \"File upload failed\" }`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Tab","Nav","Row","Col","jsxDEV","_jsxDEV","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Container","defaultActiveKey","variant","Item","Link","eventKey","Content","Pane","_c","$RefreshReg$"],"sources":["D:/Skripsi/Sistem/Dokumentasi API/code/dokumentasi-ecg-api/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Tab, Nav, Row, Col } from \"react-bootstrap\";\n\nconst App = () => {\n  return (\n    <div className=\"container mt-5\">\n      <h1>Dokumentasi API Electrocardiogram (ECG)</h1>\n      <p>\n        Dokumentasi ini menjelaskan cara mengakses layanan API untuk data\n        Electrocardiogram atau ECG. Saat ini terdapat dua fitur utama yaitu\n        untuk mengunggah dan mengambil data ECG dari database.\n      </p>\n\n      {/* POST upload-batch */}\n      <h2>POST /upload-batch</h2>\n      <p>\n        Method <strong>upload-batch</strong> digunakan untuk mengunggah file ECG\n        berjenis CSV beserta nama pasien secara batch atau keseluruhan.\n      </p>\n\n      {/* Contoh Penggunaan */}\n      <Tab.Container defaultActiveKey=\"javascript-batch\">\n        <h3>Contoh Penggunaan</h3>\n        <Nav variant=\"tabs\">\n          <Nav.Item>\n            <Nav.Link eventKey=\"javascript-batch\">Javascript</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"python-batch\">Python</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"java-batch\">Java</Nav.Link>\n          </Nav.Item>\n        </Nav>\n        <Tab.Content>\n          <Tab.Pane eventKey=\"javascript-batch\">\n            <pre>\n              <code>\n                {`fetch('http://<IP-Address>/api/rest/upload-batch', {\n  method: 'POST',\n  body: formData\n}).then(response => response.json())`}\n              </code>\n            </pre>\n          </Tab.Pane>\n          <Tab.Pane eventKey=\"python-batch\">\n            <pre>\n              <code>\n                {`import requests\nurl = 'http://<IP-Address>/api/rest/upload-batch'\nfiles = {'file': open('ecg.csv', 'rb')}\nresponse = requests.post(url, files=files)`}\n              </code>\n            </pre>\n          </Tab.Pane>\n          <Tab.Pane eventKey=\"java-batch\">\n            <pre>\n              <code>\n                {`HttpResponse<String> response = Unirest.post(\"http://<IP-Address>/api/rest/upload-batch\")\n  .field(\"patientName\", \"John Doe\")\n  .field(\"file\", new File(\"path/to/ecg.csv\"))\n  .asString();`}\n              </code>\n            </pre>\n          </Tab.Pane>\n        </Tab.Content>\n      </Tab.Container>\n\n      {/* Response */}\n      <Tab.Container defaultActiveKey=\"sukses-batch\">\n        <h3>Response</h3>\n        <Nav variant=\"tabs\">\n          <Nav.Item>\n            <Nav.Link eventKey=\"sukses-batch\">Sukses</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"gagal-batch\">Gagal</Nav.Link>\n          </Nav.Item>\n        </Nav>\n        <Tab.Content>\n          <Tab.Pane eventKey=\"sukses-batch\">\n            <pre>\n              <code>{`{ \"message\": \"File uploaded and data saved\" }`}</code>\n            </pre>\n          </Tab.Pane>\n          <Tab.Pane eventKey=\"gagal-batch\">\n            <pre>\n              <code>{`{ \"message\": \"File upload failed\" }`}</code>\n            </pre>\n          </Tab.Pane>\n        </Tab.Content>\n      </Tab.Container>\n\n      {/* POST upload-stream */}\n      <h2>POST /upload-stream</h2>\n      <p>\n        Method <strong>upload-stream</strong> digunakan untuk mengunggah file\n        ECG berjenis CSV beserta nama pasien secara stream atau bertahap.\n      </p>\n\n      {/* Contoh Penggunaan */}\n      <Tab.Container defaultActiveKey=\"javascript-stream\">\n        <h3>Contoh Penggunaan</h3>\n        <Nav variant=\"tabs\">\n          <Nav.Item>\n            <Nav.Link eventKey=\"javascript-stream\">Javascript</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"python-stream\">Python</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"java-stream\">Java</Nav.Link>\n          </Nav.Item>\n        </Nav>\n        <Tab.Content>\n          <Tab.Pane eventKey=\"javascript-stream\">\n            <pre>\n              <code>\n                {`fetch('http://<IP-Address>/api/rest/upload-stream', {\n  method: 'POST',\n  body: formData\n}).then(response => response.json())`}\n              </code>\n            </pre>\n          </Tab.Pane>\n          <Tab.Pane eventKey=\"python-stream\">\n            <pre>\n              <code>\n                {`import requests\nurl = 'http://<IP-Address>/api/rest/upload-stream'\nfiles = {'file': open('ecg.csv', 'rb')}\nresponse = requests.post(url, files=files)`}\n              </code>\n            </pre>\n          </Tab.Pane>\n          <Tab.Pane eventKey=\"java-stream\">\n            <pre>\n              <code>\n                {`HttpResponse<String> response = Unirest.post(\"http://<IP-Address>/api/rest/upload-stream\")\n  .field(\"patientName\", \"John Doe\")\n  .field(\"file\", new File(\"path/to/ecg.csv\"))\n  .asString();`}\n              </code>\n            </pre>\n          </Tab.Pane>\n        </Tab.Content>\n      </Tab.Container>\n\n      {/* Response */}\n      <Tab.Container defaultActiveKey=\"sukses-stream\">\n        <h3>Response</h3>\n        <Nav variant=\"tabs\">\n          <Nav.Item>\n            <Nav.Link eventKey=\"sukses-stream\">Sukses</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"gagal-stream\">Gagal</Nav.Link>\n          </Nav.Item>\n        </Nav>\n        <Tab.Content>\n          <Tab.Pane eventKey=\"sukses-stream\">\n            <pre>\n              <code>{`{ \"message\": \"File uploaded and data saved\" }`}</code>\n            </pre>\n          </Tab.Pane>\n          <Tab.Pane eventKey=\"gagal-stream\">\n            <pre>\n              <code>{`{ \"message\": \"File upload failed\" }`}</code>\n            </pre>\n          </Tab.Pane>\n        </Tab.Content>\n      </Tab.Container>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}