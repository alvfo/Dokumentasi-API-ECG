{"ast":null,"code":"var _jsxFileName = \"D:\\\\Skripsi\\\\Sistem\\\\Dokumentasi API\\\\code\\\\dokumentasi-ecg-api\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Tab, Nav, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dokumentasi API Electrocardiogram (ECG)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Dokumentasi ini menjelaskan cara mengakses layanan API untuk data Electrocardiogram atau ECG. Saat ini terdapat dua fitur utama yaitu untuk mengunggah dan mengambil data ECG dari database.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"POST /upload-batch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Method \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"upload-batch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }, this), \" digunakan untuk mengunggah file ECG berjenis CSV beserta nama pasien secara batch atau keseluruhan.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tab.Container, {\n      defaultActiveKey: \"example-js-batch\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        variant: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"example-batch\",\n            children: \"Contoh Penggunaan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"response-batch\",\n            children: \"Response\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"example-batch\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Contoh Penggunaan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: 12,\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Javascript:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 21\n                  }, this), `fetch('http://<IP-Address>/api/rest/upload-batch', {\n                      method: 'POST',\n                      body: formData\n                    }).then(response => response.json())`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"response-batch\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Response\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Sukses:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), \" \", `{ \"message\": \"File uploaded and data saved\" }`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Gagal:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), \" \", `{ \"message\": \"File upload failed\" }`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"POST /upload-stream\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Method \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"upload-stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 16\n      }, this), \" digunakan untuk mengunggah file ECG berjenis CSV beserta nama pasien secara stream atau bertahap.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tab.Container, {\n      defaultActiveKey: \"example-stream\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        variant: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"example-stream\",\n            children: \"Contoh Penggunaan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"response-stream\",\n            children: \"Response\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"example-stream\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Contoh Penggunaan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: 12,\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Python:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 21\n                  }, this), `import requests\n\nurl = 'http://<IP-Address>/api/rest/upload-stream'\nfiles = {'file': open('ecg.csv', 'rb')}\nresponse = requests.post(url, files=files)`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"response-stream\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Response\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Sukses:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), \" \", `{ \"message\": \"File uploaded and data saved\" }`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Gagal:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), \" \", `{ \"message\": \"File upload failed\" }`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"GET /ecg/$\", `{patientName}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Method ini digunakan untuk mendapatkan data ECG dari yang telah tersimpan di dalam database berdasarkan nama pasien.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tab.Container, {\n      defaultActiveKey: \"example-get\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        variant: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"example-get\",\n            children: \"Contoh Penggunaan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"response-get\",\n            children: \"Response\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"example-get\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Contoh Penggunaan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: 12,\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Java:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 21\n                  }, this), `HttpResponse<String> response = Unirest.get(\"http://<IP-Address>/api/rest/ecg/JohnDoe\")\n  .asString();`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"response-get\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Response\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Sukses:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), `{\n  \"patientName\": \"JohnDoe\",\n  \"ecgData\": [\n    {\"index\": \"1\", \"value\": 134},\n    {\"index\": \"2\", \"value\": 141},\n    ...\n  ]\n}`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Gagal:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), \" \", `{ \"message\": \"ECG data not found\" }`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Tab","Nav","Row","Col","jsxDEV","_jsxDEV","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Container","defaultActiveKey","variant","Item","Link","eventKey","Content","Pane","md","_c","$RefreshReg$"],"sources":["D:/Skripsi/Sistem/Dokumentasi API/code/dokumentasi-ecg-api/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Tab, Nav, Row, Col } from \"react-bootstrap\";\n\nconst App = () => {\n  return (\n    <div className=\"container mt-5\">\n      <h1>Dokumentasi API Electrocardiogram (ECG)</h1>\n      <p>\n        Dokumentasi ini menjelaskan cara mengakses layanan API untuk data\n        Electrocardiogram atau ECG. Saat ini terdapat dua fitur utama yaitu\n        untuk mengunggah dan mengambil data ECG dari database.\n      </p>\n\n      {/* POST upload-batch */}\n      <h2>POST /upload-batch</h2>\n      <p>\n        Method <strong>upload-batch</strong> digunakan untuk mengunggah file ECG\n        berjenis CSV beserta nama pasien secara batch atau keseluruhan.\n      </p>\n\n      {/* Nav Tabs */}\n      <Tab.Container defaultActiveKey=\"example-js-batch\">\n        <Nav variant=\"tabs\">\n          <Nav.Item>\n            <Nav.Link eventKey=\"example-batch\">Contoh Penggunaan</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"response-batch\">Response</Nav.Link>\n          </Nav.Item>\n        </Nav>\n\n        <Tab.Content>\n          <Tab.Pane eventKey=\"example-batch\">\n            <h4>Contoh Penggunaan</h4>\n            <Row>\n              <Col md={12}>\n                <pre>\n                  <code>\n                    {/* Contoh penggunaan dengan Javascript */}\n                    <strong>Javascript:</strong>\n                    <br />\n                    {`fetch('http://<IP-Address>/api/rest/upload-batch', {\n                      method: 'POST',\n                      body: formData\n                    }).then(response => response.json())`}\n                  </code>\n                </pre>\n              </Col>\n            </Row>\n          </Tab.Pane>\n\n          <Tab.Pane eventKey=\"response-batch\">\n            <h4>Response</h4>\n            <pre>\n              <code>\n                {/* Sukses */}\n                <strong>Sukses:</strong> {`{ \"message\": \"File uploaded and data saved\" }`}\n                <br />\n                {/* Gagal */}\n                <strong>Gagal:</strong> {`{ \"message\": \"File upload failed\" }`}\n              </code>\n            </pre>\n          </Tab.Pane>\n        </Tab.Content>\n      </Tab.Container>\n\n      {/* POST upload-stream */}\n      <h2>POST /upload-stream</h2>\n      <p>\n        Method <strong>upload-stream</strong> digunakan untuk mengunggah file\n        ECG berjenis CSV beserta nama pasien secara stream atau bertahap.\n      </p>\n\n      {/* Nav Tabs */}\n      <Tab.Container defaultActiveKey=\"example-stream\">\n        <Nav variant=\"tabs\">\n          <Nav.Item>\n            <Nav.Link eventKey=\"example-stream\">Contoh Penggunaan</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"response-stream\">Response</Nav.Link>\n          </Nav.Item>\n        </Nav>\n\n        <Tab.Content>\n          <Tab.Pane eventKey=\"example-stream\">\n            <h4>Contoh Penggunaan</h4>\n            <Row>\n              <Col md={12}>\n                <pre>\n                  <code>\n                    {/* Contoh penggunaan dengan Python */}\n                    <strong>Python:</strong>\n                    <br />\n                    {`import requests\n\nurl = 'http://<IP-Address>/api/rest/upload-stream'\nfiles = {'file': open('ecg.csv', 'rb')}\nresponse = requests.post(url, files=files)`}\n                  </code>\n                </pre>\n              </Col>\n            </Row>\n          </Tab.Pane>\n\n          <Tab.Pane eventKey=\"response-stream\">\n            <h4>Response</h4>\n            <pre>\n              <code>\n                {/* Sukses */}\n                <strong>Sukses:</strong> {`{ \"message\": \"File uploaded and data saved\" }`}\n                <br />\n                {/* Gagal */}\n                <strong>Gagal:</strong> {`{ \"message\": \"File upload failed\" }`}\n              </code>\n            </pre>\n          </Tab.Pane>\n        </Tab.Content>\n      </Tab.Container>\n\n      {/* GET ecg/{patientName} */}\n      <h2>GET /ecg/${`{patientName}`}</h2>\n      <p>\n        Method ini digunakan untuk mendapatkan data ECG dari yang telah\n        tersimpan di dalam database berdasarkan nama pasien.\n      </p>\n\n      {/* Nav Tabs */}\n      <Tab.Container defaultActiveKey=\"example-get\">\n        <Nav variant=\"tabs\">\n          <Nav.Item>\n            <Nav.Link eventKey=\"example-get\">Contoh Penggunaan</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"response-get\">Response</Nav.Link>\n          </Nav.Item>\n        </Nav>\n\n        <Tab.Content>\n          <Tab.Pane eventKey=\"example-get\">\n            <h4>Contoh Penggunaan</h4>\n            <Row>\n              <Col md={12}>\n                <pre>\n                  <code>\n                    {/* Contoh penggunaan dengan Java */}\n                    <strong>Java:</strong>\n                    <br />\n                    {`HttpResponse<String> response = Unirest.get(\"http://<IP-Address>/api/rest/ecg/JohnDoe\")\n  .asString();`}\n                  </code>\n                </pre>\n              </Col>\n            </Row>\n          </Tab.Pane>\n\n          <Tab.Pane eventKey=\"response-get\">\n            <h4>Response</h4>\n            <pre>\n              <code>\n                {/* Sukses */}\n                <strong>Sukses:</strong>\n                {`{\n  \"patientName\": \"JohnDoe\",\n  \"ecgData\": [\n    {\"index\": \"1\", \"value\": 134},\n    {\"index\": \"2\", \"value\": 141},\n    ...\n  ]\n}`}\n                <br />\n                {/* Gagal */}\n                <strong>Gagal:</strong> {`{ \"message\": \"ECG data not found\" }`}\n              </code>\n            </pre>\n          </Tab.Pane>\n        </Tab.Content>\n      </Tab.Container>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}